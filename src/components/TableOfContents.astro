---
// Component for generating a styled table of contents
const { headings } = Astro.props;

interface Heading {
  depth: number;
  slug: string;
  text: string;
}

// Only display the TOC if there are headings to show
const hasHeadings = headings && headings.length > 0;
---

{hasHeadings && (
  <div class="table-of-contents">
    <h2>Table of Contents</h2>
    <ul>
      {headings.map((heading: Heading) => (
        <li>
          <a href={`#${heading.slug}`}>
            {heading.text}
          </a>
        </li>
      ))}
    </ul>
  </div>
)}

<script is:inline>
  // Check if device is mobile - run simpler code on mobile
  const isMobile = window.innerWidth <= 768;

  // Add anchor links to all headings - with mobile optimization
  document.addEventListener('DOMContentLoaded', () => {
    // On mobile, only add anchors to major headings (h2)
    const headings = document.querySelectorAll(isMobile ? '.prose h2' : '.prose h2, .prose h3, .prose h4');
    
    // Limit the total number of headings processed on mobile
    const headingsArray = Array.from(headings);
    const headingsToProcess = isMobile ? headingsArray.slice(0, 10) : headingsArray;
    
    headingsToProcess.forEach(heading => {
      // Skip headings that already have anchor links or are in the table of contents
      if (heading.querySelector('.heading-anchor') || heading.closest('.table-of-contents')) {
        return;
      }
      
      const id = heading.id;
      if (!id) return;
      
      const anchor = document.createElement('a');
      anchor.className = 'heading-anchor';
      anchor.href = `#${id}`;
      anchor.innerHTML = 'ยง';
      
      heading.prepend(anchor);
      heading.classList.add('group');
    });
  });
</script> 