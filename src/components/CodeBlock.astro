---
// This component never needs to be explicitly imported - 
// it's automatically injected into Markdown code blocks via rehype plugin
const { code, lang = 'text' } = Astro.props;
---

<div class="code-block-wrapper relative group">
  <div class="code-header flex items-center justify-between px-4 py-2 bg-slate-100 dark:bg-slate-800 border-b border-slate-200 dark:border-slate-700 rounded-t-lg">
    <span class="text-xs font-mono text-slate-500 dark:text-slate-400">{lang}</span>
    <button class="copy-button text-xs bg-slate-200 dark:bg-slate-700 text-slate-600 dark:text-slate-300 px-2 py-1 rounded transition-colors hover:bg-[#8f36e6] dark:hover:bg-[#a3fe0d] hover:text-white dark:hover:text-black">
      Copy
    </button>
  </div>
  <pre class="!rounded-t-none !mt-0"><code class={`language-${lang}`}>{code}</code></pre>
</div>

<script is:inline>
  // Add functionality to copy buttons
  document.addEventListener('DOMContentLoaded', () => {
    const copyButtons = document.querySelectorAll('.copy-button');
    
    copyButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Find the code element
        const codeBlock = button.closest('.code-block-wrapper')?.querySelector('code');
        if (!codeBlock) return;
        
        // Copy the text
        const text = codeBlock.textContent || '';
        navigator.clipboard.writeText(text).then(() => {
          // Show copied message
          const originalText = button.textContent;
          button.textContent = 'Copied!';
          button.classList.add('bg-green-500', 'text-white');
          
          // Reset after 2 seconds
          setTimeout(() => {
            button.textContent = originalText;
            button.classList.remove('bg-green-500', 'text-white');
          }, 2000);
        });
      });
    });
  });
</script> 